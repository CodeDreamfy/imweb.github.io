define("node_modules/react-onclickoutside/index",function(require,exports,module){!function(root){"use strict";function setupHOC(root,React,ReactDOM){return function(Component){var wrapComponentWithOnClickOutsideHandling=React.createClass({statics:{getClass:function(){return Component.getClass?Component.getClass():Component}},getInstance:function(){return this.refs.instance},__outsideClickHandler:function(){},componentDidMount:function(){var instance=this.getInstance();if("function"!=typeof instance.handleClickOutside)throw new Error("Component lacks a handleClickOutside(event) function for processing outside click events.");var fn=this.__outsideClickHandler=generateOutsideCheck(ReactDOM.findDOMNode(instance),instance,this.props.outsideClickIgnoreClass||IGNORE_CLASS,this.props.preventDefault||!1,this.props.stopPropagation||!1),pos=registeredComponents.length;registeredComponents.push(this),handlers[pos]=fn,this.props.disableOnClickOutside||this.enableOnClickOutside()},componentWillReceiveProps:function(nextProps){this.props.disableOnClickOutside&&!nextProps.disableOnClickOutside?this.enableOnClickOutside():!this.props.disableOnClickOutside&&nextProps.disableOnClickOutside&&this.disableOnClickOutside()},componentWillUnmount:function(){this.disableOnClickOutside(),this.__outsideClickHandler=!1;var pos=registeredComponents.indexOf(this);pos>-1&&(handlers[pos]&&handlers.splice(pos,1),registeredComponents.splice(pos,1))},enableOnClickOutside:function(){var fn=this.__outsideClickHandler;if("undefined"!=typeof document){var events=this.props.eventTypes||DEFAULT_EVENTS;events.forEach||(events=[events]),events.forEach(function(eventName){document.addEventListener(eventName,fn)})}},disableOnClickOutside:function(){var fn=this.__outsideClickHandler;if("undefined"!=typeof document){var events=this.props.eventTypes||DEFAULT_EVENTS;events.forEach||(events=[events]),events.forEach(function(eventName){document.removeEventListener(eventName,fn)})}},render:function(){var passedProps=this.props,props={ref:"instance"};return Object.keys(this.props).forEach(function(key){props[key]=passedProps[key]}),React.createElement(Component,props)}});return function(c,wrapper){var componentName=c.displayName||c.name||"Component";wrapper.displayName="OnClickOutside("+componentName+")"}(Component,wrapComponentWithOnClickOutsideHandling),wrapComponentWithOnClickOutsideHandling}}function setupBinding(root,factory){"function"==typeof define&&define.amd?define(["react","react-dom"],function(React,ReactDom){return factory(root,React,ReactDom)}):"object"==typeof exports?module.exports=factory(root,require("node_modules/react/react"),require("node_modules/react-dom/index")):root.onClickOutside=factory(root,React,ReactDOM)}var registeredComponents=[],handlers=[],IGNORE_CLASS="ignore-react-onclickoutside",DEFAULT_EVENTS=["mousedown","touchstart"],isNodeFound=function(current,componentNode,ignoreClass){return current===componentNode?!0:current.correspondingElement?current.correspondingElement.classList.contains(ignoreClass):current.classList.contains(ignoreClass)},generateOutsideCheck=function(componentNode,componentInstance,ignoreClass,preventDefault,stopPropagation){return function(evt){preventDefault&&evt.preventDefault(),stopPropagation&&evt.stopPropagation();for(var current=evt.target,found=!1;current.parentNode;){if(found=isNodeFound(current,componentNode,ignoreClass))return;current=current.parentNode}current===document&&componentInstance.handleClickOutside.bind(componentInstance,evt)()}};setupBinding(root,setupHOC)}(this)});