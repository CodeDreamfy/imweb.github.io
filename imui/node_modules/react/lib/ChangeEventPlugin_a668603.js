define("node_modules/react/lib/ChangeEventPlugin",function(require,exports,module){"use strict";function shouldUseChangeEvent(elem){var nodeName=elem.nodeName&&elem.nodeName.toLowerCase();return"select"===nodeName||"input"===nodeName&&"file"===elem.type}function manualDispatchChangeEvent(nativeEvent){var event=SyntheticEvent.getPooled(eventTypes.change,activeElementInst,nativeEvent,getEventTarget(nativeEvent));EventPropagators.accumulateTwoPhaseDispatches(event),ReactUpdates.batchedUpdates(runEventInBatch,event)}function runEventInBatch(event){EventPluginHub.enqueueEvents(event),EventPluginHub.processEventQueue(!1)}function startWatchingForChangeEventIE8(target,targetInst){activeElement=target,activeElementInst=targetInst,activeElement.attachEvent("onchange",manualDispatchChangeEvent)}function stopWatchingForChangeEventIE8(){activeElement&&(activeElement.detachEvent("onchange",manualDispatchChangeEvent),activeElement=null,activeElementInst=null)}function getTargetInstForChangeEvent(topLevelType,targetInst){return topLevelType===topLevelTypes.topChange?targetInst:void 0}function handleEventsForChangeEventIE8(topLevelType,target,targetInst){topLevelType===topLevelTypes.topFocus?(stopWatchingForChangeEventIE8(),startWatchingForChangeEventIE8(target,targetInst)):topLevelType===topLevelTypes.topBlur&&stopWatchingForChangeEventIE8()}function startWatchingForValueChange(target,targetInst){activeElement=target,activeElementInst=targetInst,activeElementValue=target.value,activeElementValueProp=Object.getOwnPropertyDescriptor(target.constructor.prototype,"value"),Object.defineProperty(activeElement,"value",newValueProp),activeElement.attachEvent?activeElement.attachEvent("onpropertychange",handlePropertyChange):activeElement.addEventListener("propertychange",handlePropertyChange,!1)}function stopWatchingForValueChange(){activeElement&&(delete activeElement.value,activeElement.detachEvent?activeElement.detachEvent("onpropertychange",handlePropertyChange):activeElement.removeEventListener("propertychange",handlePropertyChange,!1),activeElement=null,activeElementInst=null,activeElementValue=null,activeElementValueProp=null)}function handlePropertyChange(nativeEvent){if("value"===nativeEvent.propertyName){var value=nativeEvent.srcElement.value;value!==activeElementValue&&(activeElementValue=value,manualDispatchChangeEvent(nativeEvent))}}function getTargetInstForInputEvent(topLevelType,targetInst){return topLevelType===topLevelTypes.topInput?targetInst:void 0}function handleEventsForInputEventIE(topLevelType,target,targetInst){topLevelType===topLevelTypes.topFocus?(stopWatchingForValueChange(),startWatchingForValueChange(target,targetInst)):topLevelType===topLevelTypes.topBlur&&stopWatchingForValueChange()}function getTargetInstForInputEventIE(topLevelType){return topLevelType!==topLevelTypes.topSelectionChange&&topLevelType!==topLevelTypes.topKeyUp&&topLevelType!==topLevelTypes.topKeyDown||!activeElement||activeElement.value===activeElementValue?void 0:(activeElementValue=activeElement.value,activeElementInst)}function shouldUseClickEvent(elem){return elem.nodeName&&"input"===elem.nodeName.toLowerCase()&&("checkbox"===elem.type||"radio"===elem.type)}function getTargetInstForClickEvent(topLevelType,targetInst){return topLevelType===topLevelTypes.topClick?targetInst:void 0}var EventConstants=require("node_modules/react/lib/EventConstants"),EventPluginHub=require("node_modules/react/lib/EventPluginHub"),EventPropagators=require("node_modules/react/lib/EventPropagators"),ExecutionEnvironment=require("node_modules/fbjs/lib/ExecutionEnvironment"),ReactDOMComponentTree=require("node_modules/react/lib/ReactDOMComponentTree"),ReactUpdates=require("node_modules/react/lib/ReactUpdates"),SyntheticEvent=require("node_modules/react/lib/SyntheticEvent"),getEventTarget=require("node_modules/react/lib/getEventTarget"),isEventSupported=require("node_modules/react/lib/isEventSupported"),isTextInputElement=require("node_modules/react/lib/isTextInputElement"),keyOf=require("node_modules/fbjs/lib/keyOf"),topLevelTypes=EventConstants.topLevelTypes,eventTypes={change:{phasedRegistrationNames:{bubbled:keyOf({onChange:null}),captured:keyOf({onChangeCapture:null})},dependencies:[topLevelTypes.topBlur,topLevelTypes.topChange,topLevelTypes.topClick,topLevelTypes.topFocus,topLevelTypes.topInput,topLevelTypes.topKeyDown,topLevelTypes.topKeyUp,topLevelTypes.topSelectionChange]}},activeElement=null,activeElementInst=null,activeElementValue=null,activeElementValueProp=null,doesChangeEventBubble=!1;ExecutionEnvironment.canUseDOM&&(doesChangeEventBubble=isEventSupported("change")&&(!("documentMode"in document)||document.documentMode>8));var isInputEventSupported=!1;ExecutionEnvironment.canUseDOM&&(isInputEventSupported=isEventSupported("input")&&(!("documentMode"in document)||document.documentMode>11));var newValueProp={get:function(){return activeElementValueProp.get.call(this)},set:function(val){activeElementValue=""+val,activeElementValueProp.set.call(this,val)}},ChangeEventPlugin={eventTypes:eventTypes,extractEvents:function(topLevelType,targetInst,nativeEvent,nativeEventTarget){var getTargetInstFunc,handleEventFunc,targetNode=targetInst?ReactDOMComponentTree.getNodeFromInstance(targetInst):window;if(shouldUseChangeEvent(targetNode)?doesChangeEventBubble?getTargetInstFunc=getTargetInstForChangeEvent:handleEventFunc=handleEventsForChangeEventIE8:isTextInputElement(targetNode)?isInputEventSupported?getTargetInstFunc=getTargetInstForInputEvent:(getTargetInstFunc=getTargetInstForInputEventIE,handleEventFunc=handleEventsForInputEventIE):shouldUseClickEvent(targetNode)&&(getTargetInstFunc=getTargetInstForClickEvent),getTargetInstFunc){var inst=getTargetInstFunc(topLevelType,targetInst);if(inst){var event=SyntheticEvent.getPooled(eventTypes.change,inst,nativeEvent,nativeEventTarget);return event.type="change",EventPropagators.accumulateTwoPhaseDispatches(event),event}}handleEventFunc&&handleEventFunc(topLevelType,targetNode,targetInst)}};module.exports=ChangeEventPlugin});