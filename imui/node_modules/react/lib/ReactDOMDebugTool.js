define('node_modules/react/lib/ReactDOMDebugTool', function(require, exports, module) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule ReactDOMDebugTool
   */
  
  'use strict';
  
  var ReactDOMNullInputValuePropDevtool = require('node_modules/react/lib/ReactDOMNullInputValuePropDevtool');
  var ReactDOMUnknownPropertyDevtool = require('node_modules/react/lib/ReactDOMUnknownPropertyDevtool');
  var ReactDebugTool = require('node_modules/react/lib/ReactDebugTool');
  
  var warning = require('node_modules/fbjs/lib/warning');
  
  var eventHandlers = [];
  var handlerDoesThrowForEvent = {};
  
  function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
    eventHandlers.forEach(function (handler) {
      try {
        if (handler[handlerFunctionName]) {
          handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
        }
      } catch (e) {
        'development' !== 'production' ? warning(handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e + '\n' + e.stack) : void 0;
        handlerDoesThrowForEvent[handlerFunctionName] = true;
      }
    });
  }
  
  var ReactDOMDebugTool = {
    addDevtool: function addDevtool(devtool) {
      ReactDebugTool.addDevtool(devtool);
      eventHandlers.push(devtool);
    },
    removeDevtool: function removeDevtool(devtool) {
      ReactDebugTool.removeDevtool(devtool);
      for (var i = 0; i < eventHandlers.length; i++) {
        if (eventHandlers[i] === devtool) {
          eventHandlers.splice(i, 1);
          i--;
        }
      }
    },
    onCreateMarkupForProperty: function onCreateMarkupForProperty(name, value) {
      emitEvent('onCreateMarkupForProperty', name, value);
    },
    onSetValueForProperty: function onSetValueForProperty(node, name, value) {
      emitEvent('onSetValueForProperty', node, name, value);
    },
    onDeleteValueForProperty: function onDeleteValueForProperty(node, name) {
      emitEvent('onDeleteValueForProperty', node, name);
    },
    onTestEvent: function onTestEvent() {
      emitEvent('onTestEvent');
    }
  };
  
  ReactDOMDebugTool.addDevtool(ReactDOMUnknownPropertyDevtool);
  ReactDOMDebugTool.addDevtool(ReactDOMNullInputValuePropDevtool);
  
  module.exports = ReactDOMDebugTool;

});
