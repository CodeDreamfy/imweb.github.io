define("node_modules/react/lib/ReactDOMTreeTraversal",function(require,exports,module){"use strict";function getLowestCommonAncestor(instA,instB){"_hostNode"in instA?void 0:_prodInvariant("33"),"_hostNode"in instB?void 0:_prodInvariant("33");for(var depthA=0,tempA=instA;tempA;tempA=tempA._hostParent)depthA++;for(var depthB=0,tempB=instB;tempB;tempB=tempB._hostParent)depthB++;for(;depthA-depthB>0;)instA=instA._hostParent,depthA--;for(;depthB-depthA>0;)instB=instB._hostParent,depthB--;for(var depth=depthA;depth--;){if(instA===instB)return instA;instA=instA._hostParent,instB=instB._hostParent}return null}function isAncestor(instA,instB){"_hostNode"in instA?void 0:_prodInvariant("35"),"_hostNode"in instB?void 0:_prodInvariant("35");for(;instB;){if(instB===instA)return!0;instB=instB._hostParent}return!1}function getParentInstance(inst){return"_hostNode"in inst?void 0:_prodInvariant("36"),inst._hostParent}function traverseTwoPhase(inst,fn,arg){for(var path=[];inst;)path.push(inst),inst=inst._hostParent;var i;for(i=path.length;i-->0;)fn(path[i],!1,arg);for(i=0;i<path.length;i++)fn(path[i],!0,arg)}function traverseEnterLeave(from,to,fn,argFrom,argTo){for(var common=from&&to?getLowestCommonAncestor(from,to):null,pathFrom=[];from&&from!==common;)pathFrom.push(from),from=from._hostParent;for(var pathTo=[];to&&to!==common;)pathTo.push(to),to=to._hostParent;var i;for(i=0;i<pathFrom.length;i++)fn(pathFrom[i],!0,argFrom);for(i=pathTo.length;i-->0;)fn(pathTo[i],!1,argTo)}{var _prodInvariant=require("node_modules/react/lib/reactProdInvariant");require("node_modules/fbjs/lib/invariant")}module.exports={isAncestor:isAncestor,getLowestCommonAncestor:getLowestCommonAncestor,getParentInstance:getParentInstance,traverseTwoPhase:traverseTwoPhase,traverseEnterLeave:traverseEnterLeave}});