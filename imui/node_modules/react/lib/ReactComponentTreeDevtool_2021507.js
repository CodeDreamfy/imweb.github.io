define("node_modules/react/lib/ReactComponentTreeDevtool",function(require,exports,module){"use strict";function updateTree(id,update){tree[id]||(tree[id]={element:null,parentID:null,ownerID:null,text:null,childIDs:[],displayName:"Unknown",isMounted:!1,updateCount:0}),update(tree[id])}function purgeDeep(id){var item=tree[id];if(item){var childIDs=item.childIDs;delete tree[id],childIDs.forEach(purgeDeep)}}function describeComponentFrame(name,source,ownerName){return"\n    in "+name+(source?" (at "+source.fileName.replace(/^.*[\\\/]/,"")+":"+source.lineNumber+")":ownerName?" (created by "+ownerName+")":"")}function describeID(id){var ownerName,name=ReactComponentTreeDevtool.getDisplayName(id),element=ReactComponentTreeDevtool.getElement(id),ownerID=ReactComponentTreeDevtool.getOwnerID(id);return ownerID&&(ownerName=ReactComponentTreeDevtool.getDisplayName(ownerID)),describeComponentFrame(name,element&&element._source,ownerName)}var _prodInvariant=require("node_modules/react/lib/reactProdInvariant"),ReactCurrentOwner=require("node_modules/react/lib/ReactCurrentOwner"),tree=(require("node_modules/fbjs/lib/invariant"),require("node_modules/fbjs/lib/warning"),{}),unmountedIDs={},rootIDs={},ReactComponentTreeDevtool={onSetDisplayName:function(id,displayName){updateTree(id,function(item){return item.displayName=displayName})},onSetChildren:function(id,nextChildIDs){updateTree(id,function(item){item.childIDs=nextChildIDs,nextChildIDs.forEach(function(nextChildID){var nextChild=tree[nextChildID];nextChild?void 0:_prodInvariant("68"),null==nextChild.displayName?_prodInvariant("69"):void 0,null==nextChild.childIDs&&null==nextChild.text?_prodInvariant("70"):void 0,nextChild.isMounted?void 0:_prodInvariant("71"),null==nextChild.parentID&&(nextChild.parentID=id),nextChild.parentID!==id?_prodInvariant("72",nextChildID,nextChild.parentID,id):void 0})})},onSetOwner:function(id,ownerID){updateTree(id,function(item){return item.ownerID=ownerID})},onSetParent:function(id,parentID){updateTree(id,function(item){return item.parentID=parentID})},onSetText:function(id,text){updateTree(id,function(item){return item.text=text})},onBeforeMountComponent:function(id,element){updateTree(id,function(item){return item.element=element})},onBeforeUpdateComponent:function(id,element){updateTree(id,function(item){return item.element=element})},onMountComponent:function(id){updateTree(id,function(item){return item.isMounted=!0})},onMountRootComponent:function(id){rootIDs[id]=!0},onUpdateComponent:function(id){updateTree(id,function(item){return item.updateCount++})},onUnmountComponent:function(id){updateTree(id,function(item){return item.isMounted=!1}),unmountedIDs[id]=!0,delete rootIDs[id]},purgeUnmountedComponents:function(){if(!ReactComponentTreeDevtool._preventPurging){for(var id in unmountedIDs)purgeDeep(id);unmountedIDs={}}},isMounted:function(id){var item=tree[id];return item?item.isMounted:!1},getCurrentStackAddendum:function(topElement){var info="";if(topElement){var type=topElement.type,name="function"==typeof type?type.displayName||type.name:type,owner=topElement._owner;info+=describeComponentFrame(name||"Unknown",topElement._source,owner&&owner.getName())}var currentOwner=ReactCurrentOwner.current,id=currentOwner&&currentOwner._debugID;return info+=ReactComponentTreeDevtool.getStackAddendumByID(id)},getStackAddendumByID:function(id){for(var info="";id;)info+=describeID(id),id=ReactComponentTreeDevtool.getParentID(id);return info},getChildIDs:function(id){var item=tree[id];return item?item.childIDs:[]},getDisplayName:function(id){var item=tree[id];return item?item.displayName:"Unknown"},getElement:function(id){var item=tree[id];return item?item.element:null},getOwnerID:function(id){var item=tree[id];return item?item.ownerID:null},getParentID:function(id){var item=tree[id];return item?item.parentID:null},getSource:function(id){var item=tree[id],element=item?item.element:null,source=null!=element?element._source:null;return source},getText:function(id){var item=tree[id];return item?item.text:null},getUpdateCount:function(id){var item=tree[id];return item?item.updateCount:0},getRootIDs:function(){return Object.keys(rootIDs)},getRegisteredIDs:function(){return Object.keys(tree)}};module.exports=ReactComponentTreeDevtool});