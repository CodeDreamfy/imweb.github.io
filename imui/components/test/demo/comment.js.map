{"version":3,"sources":["comment.jsx"],"names":[],"mappings":"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","file":"comment.jsx","sourcesContent":["/**\n * React 入门\n * @author jero\n * @date 2016-07-20\n */\n\n/* global Remarkable,fetch */\n\nimport React from 'react';\nimport ReactDom from 'react-dom';\nrequire('whatwg-fetch');\n\nclass Comment extends React.Component {\n  rawMarkUp() {\n    let md = new Remarkable();\n    let rawMarkUp = md.render(this.props.children.toString());\n\n    return {\n      __html: rawMarkUp\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"comment\">\n        <h2 className=\"commentAuthor\">\n          {this.props.author}\n        </h2>\n        <div dangerouslySetInnerHTML={this.rawMarkUp()}></div>\n      </div>\n    );\n  }\n}\n\n\nclass CommentList extends React.Component {\n  render() {\n    console.log(this.props.data, '33333');\n    let commentNodes = this.props.data.map((comment) => {\n      return (\n        <Comment author={comment.author} key={comment.id}>\n          {comment.text}\n        </Comment>\n      );\n    });\n\n    return (\n      <div className=\"commentList\">\n        {commentNodes}\n      </div>\n    );\n  }\n}\n\nclass CommentForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      author: '',\n      text: ''\n    };\n\n    this.handleAuthorChange = this.handleAuthorChange.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleAuthorChange(e) {\n    this.setState({\n      author: e.target.value\n    });\n  }\n\n  handleTextChange(e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const author = this.state.author.trim();\n    const text = this.state.text.trim();\n\n    if (!text || !author) {\n      return;\n    }\n\n    this.props.onCommentSubmit({\n      author,\n      text,\n      id: Math.random()\n    });\n    this.setState({\n      author: '',\n      text: '',\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"commentForm\" onSubmit={this.handleSubmit}>\n        <p>\n          <input\n            type=\"text\"\n            placeholder=\"Your name\"\n            value={this.state.author}\n            onChange={this.handleAuthorChange}\n          />\n        </p>\n        <p>\n          <input\n            type=\"text\"\n            placeholder=\"Say something...\"\n            value={this.state.text}\n            onChange={this.handleTextChange}\n          />\n        </p>\n        <p><input type=\"submit\" value=\"Post\" /></p>\n      </form>\n    );\n  }\n}\n\nclass CommentBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: []\n    };\n\n    this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\n  }\n\n  loadCommentsFromServer() {\n    fetch('/api/comments')\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        this.setState({\n          data\n        });\n      });\n  }\n\n  handleCommentSubmit(comment) {\n    fetch('/api/post', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(comment)\n    }).then((response) => {\n      return response.json();\n    }).then((data) => {\n      this.setState({\n        data\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadCommentsFromServer();\n    // setInterval(this.loadCommentsFromServer.bind(this), this.props.pollInterval);\n  }\n\n  render() {\n    return (\n      <div className=\"commentBox\">\n        <h1>Comments</h1>\n        <CommentList data={this.state.data} pollInterval={2000} />\n        <CommentForm onCommentSubmit={this.handleCommentSubmit} />\n      </div>\n    );\n  }\n}\n\nReactDom.render(\n  <CommentBox url=\"/api/comments\" />,\n  document.getElementById('demo1')\n);\n"]}