{"version":3,"sources":["dateUtils.js"],"names":[],"mappings":"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","file":"dateUtils.js","sourcesContent":["/**\r\n * 一些简单的日期处理方法\r\n * @author riverhan\r\n * @date 2016-8-10\r\n */\r\n\r\nconst DAY = 24 * 3600 * 1000;\r\nconst WEEK = 7 * DAY;\r\n\r\n/**\r\n * 获取日期所在月的第几天\r\n * @param  {Date} day 要处理的日期\r\n * @param {Number} offset 要获取本月的第几天\r\n * @return {Date}     返回的目标日期\r\n */\r\nexport function getDayOfMonth(day, offset = 1) {\r\n  let firstDate = new Date(day);\r\n\r\n  firstDate.setDate(offset);\r\n  return firstDate;\r\n}\r\n\r\n/**\r\n * 将日期改变一个星期\r\n * @param {Date} day       要处理的日期\r\n * @param {Number} count 要改变的星期数，负数表示向前，正数表示向后\r\n */\r\nexport function addDayWithWeeks(day, count = 1) {\r\n  const dayTimeValue = day.getTime();\r\n\r\n  return new Date(dayTimeValue + count * WEEK);\r\n}\r\n\r\n/**\r\n * 将日期加上指定天数\r\n * @param {Date} day   原始日期\r\n * @param {Number} count 要加的天数\r\n */\r\nexport function addDay(day, count = 1) {\r\n  const dayTimeValue = day.getTime();\r\n\r\n  return new Date(dayTimeValue + count * DAY);\r\n}\r\n\r\n/**\r\n * 获取日期所在周的星期几日期\r\n * @param  {Date} day 要处理的日期\r\n * @param  {Number} weekTarget 要获取本周的星期几 0 - 6(星期天-星期六)\r\n * @return {[type]}     返回的目标日期\r\n */\r\nexport function getDayOfWeek(day, weekTarget = 0) {\r\n  const dayTimeValue = day.getTime();\r\n  const weekOrigin = day.getDay();\r\n  let reDate;\r\n\r\n  reDate = new Date(dayTimeValue + (weekTarget - weekOrigin) * DAY);\r\n\r\n  return reDate;\r\n}\r\n\r\n/**\r\n * 判断当前日期是否在另一个日期所在的月分之内\r\n * @param  {Date}  day        当前日期\r\n * @param  {Date}  dayOfMonth 标志月分的日期\r\n * @return {Boolean}            是否在月分之内\r\n */\r\nexport function isDayInMonth(day, dayOfMonth) {\r\n  const firstDayofMonthValue = getDayOfMonth(dayOfMonth, 1).getTime();\r\n\r\n  return getDayOfMonth(day, 1).getTime() === firstDayofMonthValue;\r\n}\r\n\r\n/**\r\n * 判断日期所在的星期，是否在另一个日期的在的月分之内（部分在内也算）\r\n * @param  {Date}  dayOfWeek  标志星期的日期\r\n * @param  {Date}  dayOfMonth 标志月分的日期\r\n * @return {Boolean}            是否在月分之内\r\n */\r\nexport function isWeekInMonth(dayOfWeek, dayOfMonth) {\r\n  const firstDayOfWeek = getDayOfWeek(dayOfWeek, 0);\r\n  const lastDayofWeek = getDayOfWeek(dayOfWeek, 6);\r\n\r\n  return isDayInMonth(firstDayOfWeek, dayOfMonth) ||\r\n    isDayInMonth(lastDayofWeek, dayOfMonth);\r\n}\r\n\r\n/**\r\n * 获取纯粹日期（不包含时间，即时间为0:00:00）,为了便于日期比较\r\n * @param  {Date|Number} day 等转化的日期\r\n * @return {Date}     转化后的日期\r\n */\r\nexport function getPureDate(day) {\r\n  if (day === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  if (day.constructor !== Date) {\r\n    day = new Date(day);\r\n  }\r\n\r\n  const year = day.getFullYear();\r\n  const month = day.getMonth();\r\n  const date = day.getDate();\r\n\r\n  return new Date(year, month, date);\r\n}\r\n\r\n/**\r\n * 获取下个月第1天\r\n * @param  {Date} day 本月日期\r\n * @return {Date}     下个月第1天\r\n */\r\nexport function getDayOfNextMonth(day) {\r\n  return getDayOfMonth(getDayOfMonth(day, 32), 1);\r\n}\r\n\r\n/**\r\n * 获取上个月第1天\r\n * @param  {Date} day 本月日期\r\n * @return {Date}     上个月第1天\r\n */\r\nexport function getDayOfLastMonth(day) {\r\n  return getDayOfMonth(getDayOfMonth(day, 0), 1);\r\n}\r\n\r\n/**\r\n * 比较两个日期是否是同一天\r\n * @param  {Date}  dayA 其中一个日期\r\n * @param  {Date}  dayB 另一个日期\r\n * @return {Boolean}      是否是同一天\r\n */\r\nexport function isSameDate(dayA, dayB) {\r\n  return dayA && dayB &&\r\n    getPureDate(dayA).getTime() === getPureDate(dayB).getTime();\r\n}\r\n\r\n/**\r\n * 比较两个日期的早晚\r\n * @param  {Date}  dayA 其中一个日期\r\n * @param  {Date}  dayB 另一个日期\r\n * @return {Number}      差值\r\n */\r\nexport function compareDate(dayA, dayB) {\r\n  return getPureDate(dayA).getTime() - getPureDate(dayB).getTime();\r\n}\r\n\r\n/**\r\n * 格式化日期\r\n * @param  {Date} day    要格式化的日期\r\n * @param  {String} format 格式化 YYYY表示年占位符，MM表示月占位，DD表示日占位\r\n * @return {String}        格式化结果\r\n */\r\nexport function formatDateStr(day, format = 'YYYY-MM-DD') {\r\n  if (day === undefined) {\r\n    day = new Date();\r\n  }\r\n\r\n  if (day.constructor !== Date) {\r\n    day = new Date(day);\r\n  }\r\n\r\n  const year = day.getFullYear();\r\n  const month = day.getMonth() + 1;\r\n  const date = day.getDate();\r\n\r\n  return format.replace('YYYY', year)\r\n    .replace('MM', month)\r\n    .replace('DD', date);\r\n}\r\n\r\n/**\r\n * 判断日期是否在指定日期范围之内\r\n * @param  {Date}  day     目标日期\r\n * @param  {Date}  dayFrom 起始日期\r\n * @param  {Date}  dayTo   终止日期\r\n * @return {Boolean}       是否在范围之内\r\n */\r\nexport function isDateInRange(day, dayFrom, dayTo) {\r\n  return compareDate(day, dayFrom) >= 0 && compareDate(day, dayTo) <= 0;\r\n}\r\n"]}