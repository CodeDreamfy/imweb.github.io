{"version":3,"sources":["DateInput.jsx"],"names":[],"mappings":";;;;;;;;;;AAMA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;+eATA;;;;;;IAWM,S;;;AAgBJ,qBAAY,KAAZ,EAAmB;AAAA;;AAAA,6FACX,KADW;;AAGjB,UAAK,WAAL,GAAmB,MAAK,WAAL,CAAiB,IAAjB,OAAnB;AAHiB;AAIlB;;;;kCAEa;AACZ,WAAK,KAAL,CAAW,YAAX;AACD;;;6BAEQ;AAAA,mBAWH,KAAK,KAXF;AAAA,UAEH,QAFG,UAEH,QAFG;AAAA,UAGH,WAHG,UAGH,WAHG;AAAA,UAIH,UAJG,UAIH,UAJG;AAAA,UAKH,QALG,UAKH,QALG;AAAA,UAMH,SANG,UAMH,SANG;AAAA,UAOH,SAPG,UAOH,SAPG;AAAA,UAQH,aARG,UAQH,aARG;AAAA,UASH,SATG,UASH,SATG;AAAA,UAUH,UAVG,UAUH,UAVG;;AAYP,UAAI,cAAJ;AACA,UAAI,QAAQ,EAAZ;;AAEA,UAAI,CAAC,SAAL,EAAgB;AACd,gBAAQ,WAAW,8BAAc,QAAd,EAAwB,UAAxB,CAAX,GAAiD,EAAzD;AACD,OAFD,MAEO;AACL,gBAAQ,qBAAmB,8BAAc,cAAc,IAA5B,EAAkC,UAAlC,CAAnB,GAAmE,SAAnE,GACZ,8BAAc,cAAc,EAA5B,EAAgC,UAAhC,CADY,GACoC,EAD5C;AAED;;AAED,UAAI,UAAJ,EAAgB;AACd,gBAAQ;AACN,iBAAU,aAAa,EAAvB;AADM,SAAR;AAGD;;AAED,aACE;AAAA;AAAA;AACE,qBAAW,0BAAW;AACpB,iCAAqB,IADD;AAEpB,sBAAU,KAAK,KAAL,CAAW;AAFD,WAAX,CADb;AAKE,mBAAS,KAAK;AALhB;AAOE;AACE,eAAI,OADN;AAEE,iBAAO,KAFT;AAGE,uBAAa,WAHf;AAIE,wBAJF;AAKE,iBAAO;AALT,UAPF;AAcE;AAAA;AAAA,YAAK,WAAU,mBAAf;AACG,qBAAW,iDAAM,MAAK,UAAX,GAAX,GAAsC,IADzC;AAEG,sBAAY;AACX,kBAAK,OADM;AAEX,qBAAS,KAAK,KAAL,CAAW;AAFT,YAAZ,GAGI;AALP;AAdF,OADF;AAwBD;;;;EA9EqB,gBAAM,S;;AAAxB,S,CACG,S,GAAY;AACjB,YAAU,iBAAU,MADH;AAEjB,gBAAc,iBAAU,IAAV,CAAe,UAFZ;AAGjB,cAAY,iBAAU,MAAV,CAAiB,UAHZ;AAIjB,YAAU,iBAAU,IAJH;AAKjB,aAAW,iBAAU,IALJ;AAMjB,eAAa,iBAAU,IANN;AAOjB,YAAU,iBAAU;AAPH,C;AADf,S,CAWG,Y,GAAe;AACpB,YAAU,SADU;AAEpB,eAAa,uBAAM,CAAE;AAFD,C;kBAsET,S","file":"DateInput.jsx","sourcesContent":["/**\r\n * imui.Datepicker - DateInput\r\n * @author riverhan\r\n * @data 2016-8-10\r\n */\r\n\r\nimport React, { PropTypes } from 'react';\r\nimport classnames from 'classnames';\r\nimport { formatDateStr } from './dateUtils';\r\nimport Icon from '../../icon/index';\r\n\r\nclass DateInput extends React.Component {\r\n  static propTypes = {\r\n    selected: PropTypes.object,\r\n    onInputClick: PropTypes.func.isRequired,\r\n    dateFormat: PropTypes.string.isRequired,\r\n    showIcon: PropTypes.bool,\r\n    showClean: PropTypes.bool,\r\n    handleClean: PropTypes.func,\r\n    disabled: PropTypes.bool\r\n  };\r\n\r\n  static defaultProps = {\r\n    selected: undefined,\r\n    handleClean: () => {}\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.props.onInputClick();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n        selected,\r\n        placeholder,\r\n        dateFormat,\r\n        showIcon,\r\n        showClean,\r\n        rangeMode,\r\n        selectedRange,\r\n        rangeJoin,\r\n        inputWidth\r\n    } = this.props;\r\n    let value;\r\n    let style = {};\r\n\r\n    if (!rangeMode) {\r\n      value = selected ? formatDateStr(selected, dateFormat) : '';\r\n    } else {\r\n      value = selectedRange ? `${formatDateStr(selectedRange.from, dateFormat)}${rangeJoin}\\\r\n${formatDateStr(selectedRange.to, dateFormat)}` : '';\r\n    }\r\n\r\n    if (inputWidth) {\r\n      style = {\r\n        width: `${inputWidth - 22}px`\r\n      };\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={classnames({\r\n          'im-dp-input--wrap': true,\r\n          disabled: this.props.disabled\r\n        })}\r\n        onClick={this.handleClick}\r\n      >\r\n        <input\r\n          ref=\"input\"\r\n          value={value}\r\n          placeholder={placeholder}\r\n          readOnly\r\n          style={style}\r\n        />\r\n        <div className=\"im-dp-input--icon\">\r\n          {showIcon ? <Icon type=\"calendar\" /> : null}\r\n          {showClean ? <Icon\r\n            type=\"close\"\r\n            onClick={this.props.handleClean}\r\n          /> : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DateInput;\r\n"]}