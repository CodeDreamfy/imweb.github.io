{"version":3,"sources":["validator.js"],"names":[],"mappings":";;;;;;;AAAA;;;;;AAKA,IAAM,UAAU,SAAV,OAAU,CAAC,CAAD,EAAO;AACrB,SAAO,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,CAA/B,MAAsC,gBAA7C;AACD,CAFD;;kBAIe;AACb,OAAK;AACH,WAAO,iCADJ;AAEH,YAAQ,WAFL;AAGH,WAAO,gBAHJ;AAIH,iBAAa,aAJV;AAKH,cAAU,cALP;AAMH,eAAW,kEANR;AAOH,eAAW,iEAPR;AAQH,eAAW,OARR;AASH,eAAW,OATR;AAUH,aAAS,OAVN;AAWH,UAAM,kEAXH;AAYH,UAAM,kCAZH;AAaH,SAAK,cAbF;AAcH,WAAO,MAdJ;AAeH,WAAO,MAfJ;AAgBH,SAAK,0BAhBF;AAiBH,UAjBG,kBAiBI,GAjBJ,EAiBS,KAjBT,EAiBgB;AACjB,WAAK,GAAL,IAAY,KAAZ;AACD;AAnBE,GADQ;;AAwBb,KAxBa,eAwBT,GAxBS,EAwBM;AAAA,QAAV,GAAU,yDAAJ,EAAI;;AACjB,QAAI,CAAC,QAAQ,GAAR,CAAL,EAAmB;AACjB,YAAM,CAAC,GAAD,CAAN;AACD;AACD,WAAO,IAAI,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAA7B;AACD,GA7BY;AA+Bb,QA/Ba,kBA+BN,GA/BM,EA+BS;AAAA,QAAV,GAAU,yDAAJ,EAAI;;AACpB,QAAI,CAAC,QAAQ,GAAR,CAAL,EAAmB;AACjB,YAAM,CAAC,GAAD,CAAN;AACD;AACD,UAAM,IAAI,GAAJ,CAAQ,UAAC,CAAD;AAAA,aAAO,EAAE,QAAF,EAAP;AAAA,KAAR,CAAN;AACA,WAAO,IAAI,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAA7B;AACD,GArCY;;;AAuCb;AACA,OAxCa,mBAwCa;AAAA,QAApB,GAAoB,yDAAd,EAAc;AAAA,QAAV,GAAU,yDAAJ,EAAI;;AACxB,UAAM,IAAI,QAAJ,EAAN;AACA,QAAI,IAAI,IAAR,EAAc;AACZ,YAAM,IAAI,IAAJ,EAAN;AACD;AACD,QAAI,MAAM,SAAS,IAAI,GAAb,EAAkB,EAAlB,KAAyB,CAAC,CAApC;AACA,QAAI,MAAM,SAAS,IAAI,GAAb,EAAkB,EAAlB,KAAyB,OAAO,iBAA1C;;AAEA,WAAO,OAAO,IAAI,MAAX,IAAqB,OAAO,IAAI,MAAvC;AACD,GAjDY;;;AAmDb;AACA,OApDa,iBAoDP,GApDO,EAoDQ;AAAA,QAAV,GAAU,yDAAJ,EAAI;;AACnB,UAAM,SAAS,GAAT,EAAc,EAAd,CAAN;AACA,QAAI,MAAM,SAAS,IAAI,GAAb,EAAkB,EAAlB,CAAV;AACA,QAAI,MAAM,SAAS,IAAI,GAAb,EAAkB,EAAlB,CAAV;;AAEA,WAAO,OAAO,GAAP,IAAc,OAAO,GAA5B;AACD;AA1DY,C","file":"validator.js","sourcesContent":["/**\r\n * @author moxhe\r\n * @date 2016-08-10\r\n */\r\n\r\nconst isArray = (x) => {\r\n  return Object.prototype.toString.call(x) === '[object Array]';\r\n};\r\n\r\nexport default {\r\n  reg: {\r\n    email: /^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w+)+)$/,\r\n    mobile: /^1\\d{10}$/,\r\n    ascii: /^[\\x00-\\x7F]+$/,\r\n    asciiSingle: /[\\x00-\\xFF]/,\r\n    notAscii: /[^\\x00-\\x7F]/,\r\n    fullWidth: /[^\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/,\r\n    halfWidth: /[\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/,\r\n    uppercase: /[A-Z]/,\r\n    lowercase: /[a-z]/,\r\n    integer: /^\\d+$/,\r\n    date: /^(?:20|19)\\d\\d([-\\/\\\\\\.])(?:0?[1-9]|1[0-2])\\1(?:[012]?\\d|3[01])$/,\r\n    time: /^(?:[01]?\\d|2[0-3])[:：][0-5]?\\d$/,\r\n    url: /^https?:\\/\\//,\r\n    ltrim: /^\\s+/,\r\n    rtrim: /\\s+$/,\r\n    uin: /^[1-9](\\d{4,10}|\\d{17})$/,\r\n    extend(key, value) {\r\n      this[key] = value;\r\n    }\r\n  },\r\n\r\n\r\n  not(val, arr = []) {\r\n    if (!isArray(arr)) {\r\n      arr = [arr];\r\n    }\r\n    return arr.indexOf(val) === -1;\r\n  },\r\n\r\n  inside(val, arr = []) {\r\n    if (!isArray(arr)) {\r\n      arr = [arr];\r\n    }\r\n    arr = arr.map((x) => x.toString());\r\n    return arr.indexOf(val) !== -1;\r\n  },\r\n\r\n  // 字符串长度限制\r\n  limit(str = '', opt = {}) {\r\n    str = str.toString();\r\n    if (opt.trim) {\r\n      str = str.trim();\r\n    }\r\n    let min = parseInt(opt.min, 10) || -1;\r\n    let max = parseInt(opt.max, 10) || Number.POSITIVE_INFINITY;\r\n\r\n    return min <= str.length && max >= str.length;\r\n  },\r\n\r\n  // 数字大小限制\r\n  range(val, opt = {}) {\r\n    val = parseInt(val, 10);\r\n    let min = parseInt(opt.min, 10);\r\n    let max = parseInt(opt.max, 10);\r\n\r\n    return min <= val && max >= val;\r\n  }\r\n};\r\n"]}