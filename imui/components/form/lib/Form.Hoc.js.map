{"version":3,"sources":["Form.Hoc.jsx"],"names":[],"mappings":";;;;;;;;;;kBAsBe,UAAU,SAAV,EAAqB;AAClC;AACA,SAAO,gBAAM,WAAN,CAAkB;AACvB,4BAAsB,QAAQ,SAAR,CAAtB,MADuB;;AAGvB,YAAQ,qBAHe;;AAKvB,mBALuB,6BAKL;AAChB;AADgB,UAER,UAFQ,GAEO,UAAU,YAFjB,CAER,UAFQ;;;AAIhB,aAAO;AACL,8BADK;AAEL,mBAAW;AAFN,OAAP;AAID,KAbsB;AAevB,mBAfuB,6BAeL;AAChB,aAAO;AACL,iBAAS;AADJ,OAAP;AAGD,KAnBsB;AAqBvB,YArBuB,oBAqBd,IArBc,EAqBR;AACb,WAAK,QAAL,CAAc;AACZ,iBAAS;AADG,OAAd;AAGD,KAzBsB;AA2BvB,UA3BuB,oBA2Bd;AAAA;;AAAA,mBAgBH,KAAK,KAhBF;AAAA,UAGL,UAHK,UAGL,UAHK;AAAA,UAIL,QAJK,UAIL,QAJK;AAAA,UAKL,IALK,UAKL,IALK;AAAA,UAML,SANK,UAML,SANK;AAAA,UASL,KATK,UASL,KATK;AAAA,UAUL,YAVK,UAUL,YAVK;AAAA,UAYL,SAZK,UAYL,SAZK;AAAA,UAaL,SAbK,UAaL,SAbK;;AAAA,UAeF,MAfE;;AAAA,UAkBC,OAlBD,GAkBa,KAAK,KAlBlB,CAkBC,OAlBD;;;AAoBP,UAAI,SAAS,gBAAM,aAAN,CAAoB,SAApB;AACX;AACA,kBAAU,KAAK,QAFJ;AAGX,kBAAU,KAAK,QAHJ;AAIX;AACA;AACA,eAAO,KAAK,QAAL,MAAmB,EANf;AAOX,kBAAU,KAAK,UAAL;AAPC,SAQR,MARQ,EAAb;;AAWA;AACA,UAAM,iDACH,SADG,EACS,CAAC,CAAC,SADX,4BAEH,SAFG,EAES,IAFT,4BAGA,SAHA,cAGqB,CAAC,KAAK,OAAL,EAHtB,WAAN;;AAMA,UAAI,OAAO,EAAX;AACA,UAAI,cAAc,YAAY,IAA9B,EAAoC;AAClC,YAAI,eAAJ;AAAA,YAAY,OAAO,EAAnB;;AAEA,YAAI,OAAJ,EAAa;AACX,mBAAS,MAAT;AACA,eAAK,IAAL,CAAU,KAAK,KAAL,CAAW,WAAX,IAA0B,EAApC;AACD,SAHD,MAGO,IAAI,KAAK,OAAL,EAAJ,EAAoB;AACzB,mBAAS,SAAT;AACA,eAAK,IAAL,CAAU,EAAV;AACD,SAHM,MAGA;AACL,mBAAS,OAAT;AACA,iBAAO,KAAK,OAAL,EAAP;AACD;AACD,eAAO,mDAAK,QAAQ,MAAb,EAAqB,MAAO,IAA5B,GAAP;AACD;;AAED;AACE;AACA;AACA;AAAA;AAAA,YAAK,WAAW,0BAAW,MAAX,CAAhB;AACG,gBADH;AAEG;AAFH;AAHF;AAQD;AA1FsB,GAAlB,CAAP;AA4FA;AACD,C;;AApHD;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS,OAAT,CAAiB,SAAjB,EAA4B;AAC1B,SACE,UAAU,WAAV,IACA,UAAU,IADV,IAEA,WAHF;AAKD","file":"Form.Hoc.jsx","sourcesContent":["\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport Mixin from './Form.Mixin.jsx';\r\nimport Msg from '../fields/Form.Msg.jsx';\r\n\r\n// 注意: 使用Hoc封装的组件\r\n// 1. 需实现onChange, onBlur的setValue\r\n// 2. 需实现onFocus的setFocus\r\n// 3. 需配置部分Mixin的defaultPropTypes\r\n\r\n// 这里只耦合了需要render的校验\r\n\r\nfunction getName(Component) {\r\n  return (\r\n    Component.displayName ||\r\n    Component.name ||\r\n    'Component'\r\n  );\r\n}\r\n\r\nexport default function (Component) {\r\n  /* eslint-disable */\r\n  return React.createClass({\r\n    displayName: `[IMUI ${getName(Component)}]`,\r\n\r\n    mixins: [Mixin],\r\n\r\n    getDefaultProps() {\r\n      // 融合表单组件本身的缺省值\r\n      const { isChecking } = Component.defaultProps;\r\n\r\n      return {\r\n        isChecking,\r\n        prefixCls: 'im-field'\r\n      };\r\n    },\r\n\r\n    getInitialState() {\r\n      return {\r\n        isFocus: null\r\n      };\r\n    },\r\n\r\n    setFocus(flag) {\r\n      this.setState({\r\n        isFocus: flag\r\n      });\r\n    },\r\n\r\n    render() {\r\n      const {\r\n        // 为封装的组件去掉Mixin的部分属性\r\n        isChecking,\r\n        patterns,\r\n        tips,\r\n        validator,\r\n        // 去掉value,defaultValue\r\n        // 封装的表单组件value由高阶组件控制\r\n        value,\r\n        defaultValue,\r\n        // field容器类名控制\r\n        className,\r\n        prefixCls,\r\n        // 忽略data-前缀属性\r\n        ...others\r\n      } = this.props;\r\n\r\n      const { isFocus } = this.state;\r\n\r\n      var $field = React.createElement(Component, {\r\n        // APIs that expose to children\r\n        setValue: this.setValue,\r\n        setFocus: this.setFocus,\r\n        // props for children render\r\n        // give blank string for controlled field\r\n        value: this.getValue() || '',\r\n        disabled: this.isDisabled(),\r\n        ...others\r\n      });\r\n\r\n      // error classname is for field component\r\n      const allCls = {\r\n        [className]: !!className,\r\n        [prefixCls]: true,\r\n        [`${prefixCls}--error`]: !this.isValid()\r\n      };\r\n\r\n      let $msg = '';\r\n      if (isChecking && isFocus !== null) {\r\n        let status, msgs = [];\r\n\r\n        if (isFocus) {\r\n          status = 'info';\r\n          msgs.push(this.props.placeholder || '');\r\n        } else if (this.isValid()) {\r\n          status = 'success';\r\n          msgs.push('');\r\n        } else {\r\n          status = 'error';\r\n          msgs = this.getMsgs();\r\n        }\r\n        $msg = <Msg status={status} msgs= {msgs} />;\r\n      }\r\n\r\n      return (\r\n        // 将通用的校验逻辑相关耦合至此\r\n        // 表单组件只需要实现自身即可\r\n        <div className={classnames(allCls)}>\r\n          {$field}\r\n          {$msg}\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n  /* eslint-enable */\r\n}\r\n"]}