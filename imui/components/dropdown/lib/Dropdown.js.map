{"version":3,"sources":["Dropdown.jsx"],"names":[],"mappings":"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","file":"Dropdown.jsx","sourcesContent":["import React from 'react';\r\nimport Icon from '../../icon/index';\r\n\r\nclass Dropdown extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.toggleDropdown = this.toggleDropdown.bind(this);\r\n    this.closeDropdown = this.closeDropdown.bind(this);\r\n    this.state = {\r\n      // 当前选中\r\n      selectedOption: this.props.defaultOption,\r\n      // 搜索关键字\r\n      searchKeyword: null,\r\n      // 当前是否正在选择中\r\n      showDropdown: false\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    let { defaultOption } = this.props;\r\n    let searchKeyword = '';\r\n    if (defaultOption) {\r\n      searchKeyword = this.props.defaultOption.name;\r\n    }\r\n    this.setState({\r\n      searchKeyword\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { searchable, options, style, hoverable } = this.props;\r\n    let { selectedOption, searchKeyword, showDropdown } = this.state;\r\n    // show options\r\n    let optionsList = [];\r\n    if (options != null) {\r\n      options.forEach(option => {\r\n        if (!searchable || option.name.indexOf(searchKeyword) >= 0) {\r\n          optionsList.push(\r\n            <div\r\n              className=\"im-dropdown-dropdown-list-one\"\r\n              value={option.value}\r\n              key={option.value}\r\n              onClick={() => this.onSelect(option)}\r\n            >{option.element == null ? option.name : option.element}\r\n            </div>);\r\n        }\r\n      });\r\n    } else {\r\n      // 加载中\r\n      optionsList.push(<div\r\n        key={0}\r\n        className=\"im-dropdown-dropdown-list-one\"\r\n      >加载中...</div>);\r\n    }\r\n\r\n    return (\r\n      <div className=\"im-dropdown\" onMouseLeave={this.closeDropdown} style={style}>\r\n        <div\r\n          className=\"im-dropdown-wrap\"\r\n          onClick={this.toggleDropdown}\r\n          onMouseEnter={hoverable ? this.toggleDropdown : null}\r\n        >\r\n          {searchable ?\r\n            <input\r\n              className=\"im-dropdown-wrap-text\"\r\n              type=\"text\"\r\n              value={searchKeyword}\r\n              onChange={this.onSearch}\r\n            /> :\r\n            <div className=\"im-dropdown-wrap-text\">{selectedOption ? selectedOption.name : null}</div>\r\n          }\r\n          <span className=\"im-dropdown-wrap-icon\"><Icon\r\n            type=\"v-bottom\"\r\n          /></span>\r\n        </div>\r\n        {optionsList.length > 0 ?\r\n          <div className=\"im-dropdown-dropdown\" style={{ display: showDropdown ? 'block' : 'none' }}>\r\n            <div className=\"im-dropdown-dropdown-list\">\r\n              {optionsList}\r\n            </div>\r\n          </div> : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onSelect(option) {\r\n    const { onChange } = this.props;\r\n    if (onChange) {\r\n      onChange(option, this.state.selectedOption);\r\n    }\r\n    this.setState({\r\n      selectedOption: option,\r\n      searchKeyword: option.name,\r\n      showDropdown: false\r\n    });\r\n  }\r\n\r\n  onSearch(event) {\r\n    let input = event.currentTarget;\r\n    this.setState({\r\n      searchKeyword: input.value,\r\n      showDropdown: true\r\n    });\r\n  }\r\n\r\n  toggleDropdown() {\r\n    this.setState({\r\n      showDropdown: !this.state.showDropdown\r\n    });\r\n  }\r\n\r\n  closeDropdown() {\r\n    this.setState({\r\n      showDropdown: false\r\n    });\r\n  }\r\n}\r\n\r\nDropdown.propTypes = {\r\n  /**\r\n   * 是否可以启用文字输入框搜索选项\r\n   */\r\n  searchable: React.PropTypes.bool,\r\n  /**\r\n   * 下拉列表所有选项数据\r\n   */\r\n  options: React.PropTypes.arrayOf(React.PropTypes.shape({\r\n    /**\r\n     * 选项显示名称\r\n     */\r\n    name: React.PropTypes.any.isRequired,\r\n    /**\r\n     * 选项值\r\n     */\r\n    value: React.PropTypes.any.isRequired,\r\n    /**\r\n     * 如果该属性不为空，将把这个元素显示在选项列表里\r\n     * 如果该属性为空，将把name属性作为显示文字\r\n     */\r\n    element: React.PropTypes.element\r\n  })),\r\n  /**\r\n   * 默认选中的选项的值\r\n   */\r\n  defaultOption: React.PropTypes.shape({\r\n    name: React.PropTypes.string.isRequired,\r\n    value: React.PropTypes.any.isRequired\r\n  }),\r\n  /**\r\n   * 当选中的值发生变化时调用\r\n   * callback(newValue,oldValue)\r\n   */\r\n  onChange: React.PropTypes.func,\r\n  /**\r\n   * 当鼠标悬浮在组件上时是否暂时下拉菜单\r\n   */\r\n  hoverable: React.PropTypes.bool\r\n};\r\n\r\nDropdown.defaultProps = {};\r\n\r\nexport default Dropdown;\r\n"]}