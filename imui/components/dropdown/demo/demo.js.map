{"version":3,"sources":["demo.jsx"],"names":[],"mappings":"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","file":"demo.jsx","sourcesContent":["import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport Dropdown from '../index';\r\nimport Icon from '../../icon/index';\r\nimport Button from '../../button/index';\r\nimport { Demo, DemoPanel } from '../../../external/demo/index';\r\n\r\nexport default class App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      asnycOptions: null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let options = [\r\n      {\r\n        name: 'swift',\r\n        value: 101\r\n      }, {\r\n        name: 'java',\r\n        value: 121\r\n      }, {\r\n        name: 'javascript',\r\n        value: 332\r\n      }\r\n    ];\r\n    let bigOptions = [];\r\n    for (let i = 0; i < 100; i++) {\r\n      bigOptions.push({\r\n        name: `name${i}`,\r\n        value: i\r\n      });\r\n    }\r\n    let { asnycOptions } = this.state;\r\n    return (\r\n      <Demo name=\"下拉\">\r\n        <DemoPanel title=\"基本\">\r\n          <Dropdown\r\n            options={options} defaultOption={options[0]} onChange={this.handleChange}\r\n            style={{ width: '200px' }}\r\n          />\r\n        </DemoPanel>\r\n        <DemoPanel title=\"hover\">\r\n          <Dropdown\r\n            options={options}\r\n            style={{ width: '200px' }}\r\n            hoverable\r\n          />\r\n        </DemoPanel>\r\n        <DemoPanel title=\"placeholder\">\r\n          <Dropdown\r\n            options={options}\r\n            style={{ width: '250px' }}\r\n            placeholder=\"没值被选中时会有placeholder\"\r\n          />\r\n        </DemoPanel>\r\n        <DemoPanel title=\"cleanable\">\r\n          <Dropdown\r\n            options={options}\r\n            style={{ width: '200px' }}\r\n            placeholder=\"没值被选中时会有placeholder\"\r\n            cleanable\r\n          />\r\n        </DemoPanel>\r\n        <DemoPanel title=\"异步加载选项\">\r\n          <Dropdown\r\n            options={asnycOptions}\r\n            style={{ width: '200px' }}\r\n          />\r\n        </DemoPanel>\r\n        <DemoPanel title=\"选项中嵌套其它元素\">\r\n          <Dropdown\r\n            options={[\r\n              {\r\n                name: 'java',\r\n                value: 101,\r\n                element: <div>\r\n                  <span\r\n                    style={{ float: 'left' }}\r\n                  >bottom\r\n                  </span>\r\n                  <Icon\r\n                    type=\"arrow-bottom\"\r\n                    style={{ float: 'right' }}\r\n                  />\r\n                </div>\r\n              }, {\r\n                name: 'swift',\r\n                value: 121,\r\n                element: <div>\r\n                  <Button>Button</Button>\r\n                </div>,\r\n              }, {\r\n                name: 'js',\r\n                value: 332,\r\n                element: <strong style={{ color: 'red' }}>你好</strong>,\r\n              }\r\n            ]}\r\n            style={{ width: '150px' }}\r\n          />\r\n        </DemoPanel>\r\n        <DemoPanel title=\"搜索选项\">\r\n          <Dropdown\r\n            options={bigOptions}\r\n            searchable\r\n          />\r\n        </DemoPanel>\r\n        <DemoPanel title=\"默认选中选项\">\r\n          <Dropdown\r\n            options={options}\r\n            defaultOption={options[0]}\r\n            searchable\r\n          />\r\n          <Dropdown\r\n            options={options}\r\n            searchable\r\n            placeholder=\"我是placeholder\"\r\n          />\r\n        </DemoPanel>\r\n        <DemoPanel title=\"隐藏边框\">\r\n          <Dropdown\r\n            options={options}\r\n            defaultOption={options[1]}\r\n            noBorder\r\n          />\r\n        </DemoPanel>\r\n      </Demo>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        asnycOptions: [\r\n          {\r\n            name: 'swift',\r\n            value: 101\r\n          }, {\r\n            name: 'java',\r\n            value: 121\r\n          }, {\r\n            name: 'javascript',\r\n            value: 332\r\n          }\r\n        ]\r\n      });\r\n    }, 2000);\r\n  }\r\n\r\n  handleChange(newValue, oldValue) {\r\n    console.log(newValue, oldValue);\r\n  }\r\n}\r\n\r\nconst demo = document.getElementById('demo');\r\nif (demo) {\r\n  ReactDom.render(<App />, demo);\r\n}\r\n"]}