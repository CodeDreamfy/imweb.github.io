{"version":3,"sources":["Button.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAMA;;;;AACA;;;;;;;;;;;;;;+eAPA;;;;;;IAUM,M;;;AACJ,kBAAY,KAAZ,EAAmB;AAAA;;AAAA,0FACX,KADW;;AAEjB,UAAK,KAAL,GAAa,EAAb;AAFiB;AAGlB;;;;6BAEQ;AAAA;;AAAA,mBAUH,KAAK,KAVF;AAAA,UAEL,SAFK,UAEL,SAFK;AAAA,UAGL,QAHK,UAGL,QAHK;AAAA,UAIL,OAJK,UAIL,OAJK;AAAA,UAKL,KALK,UAKL,KALK;AAAA,UAML,IANK,UAML,IANK;AAAA,UAOL,IAPK,UAOL,IAPK;AAAA,UAQL,QARK,UAQL,QARK;;AAAA,UASF,MATE;;AAWP,UAAM,UAAU,0EACb,SADa,EACD,IADC,yCAEN,KAFM,EAEI,IAFJ,yCAGN,IAHM,EAGG,IAHH,4CAId,QAJc,gBAAhB;AAMA,UAAI,qBAAJ;;AAEA,UAAI,YAAY,OAAhB,EAAyB;AACvB,uBAAe,wBAAM,CAAE,CAAvB;AACD,OAFD,MAEO;AACL,uBAAe,OAAf;AACD;;AAED,UAAI,QAAQ,CAAC,QAAb,EAAuB;AACrB,eACE;AAAA;AAAA,qBAAG,WAAW,OAAd,EAAuB,SAAS,YAAhC,EAA8C,MAAM,IAApD,IAA8D,MAA9D;AACG;AADH,SADF;AAKD;;AAED,aACE;AAAA;AAAA,mBAAQ,WAAW,OAAnB,EAA4B,SAAS,YAArC,IAAuD,MAAvD;AACG;AADH,OADF;AAKD;;;;EA5CkB,gBAAM,S;;AA+C3B,OAAO,SAAP,GAAmB;AACjB,aAAW,iBAAU,MADJ;AAEjB,WAAS,iBAAU,IAFF;AAGjB,YAAU,iBAAU,IAHH;AAIjB,YAAU,iBAAU,IAJH;AAKjB,QAAM,iBAAU,MALC;AAMjB,SAAO,iBAAU,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,MAAlC,CAAhB,CANU;AAOjB,QAAM,iBAAU,KAAV,CAAgB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAhB;AAPW,CAAnB;;AAUA,OAAO,YAAP,GAAsB;AACpB,aAAW,QADS;AAEpB,SAFoB,qBAEV,CAAE,CAFQ;;AAGpB,YAAU,KAHU;AAIpB,SAAO,SAJa;AAKpB,QAAM;AALc,CAAtB;;kBASe,M","file":"Button.jsx","sourcesContent":["/**\r\n * imui.Button\r\n * @author lonnyhuang\r\n * @date 2016-07-27\r\n */\r\n\r\nimport React, { PropTypes } from 'react';\r\nimport classnames from 'classnames';\r\n\r\n\r\nclass Button extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      prefixCls,\r\n      disabled,\r\n      onClick,\r\n      color,\r\n      size,\r\n      href,\r\n      children,\r\n      ...others\r\n    } = this.props;\r\n    const classes = classnames({\r\n      [prefixCls]: true,\r\n      [`btn-${color}`]: true,\r\n      [`btn-${size}`]: true,\r\n      disabled\r\n    });\r\n    let clickHandler;\r\n\r\n    if (disabled && onClick) {\r\n      clickHandler = () => {};\r\n    } else {\r\n      clickHandler = onClick;\r\n    }\r\n\r\n    if (href && !disabled) {\r\n      return (\r\n        <a className={classes} onClick={clickHandler} href={href} {...others}>\r\n          {children}\r\n        </a>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <button className={classes} onClick={clickHandler} {...others}>\r\n        {children}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  prefixCls: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  href: PropTypes.string,\r\n  color: PropTypes.oneOf(['primary', 'default', 'outline', 'weak']),\r\n  size: PropTypes.oneOf(['l', 'm', 's'])\r\n};\r\n\r\nButton.defaultProps = {\r\n  prefixCls: 'im-btn',\r\n  onClick() {},\r\n  disabled: false,\r\n  color: 'default',\r\n  size: 'm'\r\n};\r\n\r\n\r\nexport default Button;\r\n"]}